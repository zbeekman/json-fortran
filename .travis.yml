language: python

python:
  - 2.7

cache: apt

# Build matrix: Run the three build systems and tests in parallel
env:
  global:
    - DEPENDS=gfortran-4.9
  matrix:
      # CMake build with unit tests, no documentation
      # Allow to fail for now until tests are fixed
    - BUILD_SCRIPT="mkdir cmake-build && cd cmake-build && cmake -DSKIP_DOC_GEN:BOOL=TRUE .. && make -j 3 && (make test || true)"
      SPECIFIC_DEPENDS="cmake nodejs"
      JLINT="yes"
      DOCS="no"
      FoBiS="no"

      # build with build.sh, make documentation, and do sniff test
    - BUILD_SCRIPT="./build.sh && cd bin && ./json"
      SPECIFIC_DEPENDS=""
      JLINT="no"
      DOCS="yes"
      FoBiS="yes"

      # test scons build, no documentation or jsonlint, sniff test
    - BUILD_SCRIPT="scons && cd bin && ./json"
      SPECIFIC_DEPENDS=""
      JLINT="no"
      DOCS="no"
      FoBiS="no"

before_install:
  - sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
  - ([[ $SPECIFIC_DEPENDS == *cmake* ]] &&
    sudo apt-add-repository -y ppa:kalakris/cmake) ||
    [[ $SPECIFIC_DEPENDS != *cmake* ]]
  - ([[ $JLINT == [yY]* ]] &&
    curl -sL https://deb.nodesource.com/setup | sudo bash - ) ||
    ([[ $JLINT != [yY]* ]] && sudo apt-get update -qq)
  - ([[ $DOCS == [yY]* ]] &&
    wget http://rfsber.home.xs4all.nl/Robo/robodoc-4.99.41.tar.gz) ||
    [[ $DOCS != [yY]* ]]

install:
  - sudo apt-get install -y $SPECIFIC_DEPENDS $DEPENDS
  - ([[ $JLINT == [yY]* ]] &&
    sudo npm install -g jsonlint)
    || [[ $JLINT != [yY]* ]]
  - sudo ln -fs /usr/bin/gfortran-4.9 /usr/bin/gfortran && gfortran --version
  - ([[ $FoBiS == [yY]* ]] &&
    sudo pip install FoBiS.py && FoBiS.py --version) ||
    [[ $FoBiS != [yY]* ]]
  - ([[ $DOCS == [yY]* ]] &&
    tar -xzvf robodoc-4.99.41.tar.gz &&
    cd robodoc-4.99.41 &&
    ./configure && make -j 3 && cd $TRAVIS_BUILD_DIR &&
    export PATH="$TRAVIS_BUILD_DIR/robodoc-4.99.41/Source:$PATH") ||
    [[ $DOCS != [yY]* ]]

script:
  - echo $BUILD_SCRIPT
  - echo $BUILD_SCRIPT | bash -

after_success:
  - cd $TRAVIS_BUILD_DIR
  - $($TRAVIS_SECURE_ENV_VARS) &&
      [ "$TRAVIS_BRANCH" = "master" ] &&
        [ "$(ls -a $TRAVIS_BUILD_DIR/documentation)" ] &&
          git config --global user.name "TRAVIS-CI-for-$(git --no-pager show -s --format='%cn' $TRAVIS_COMMIT)" &&
          git config --global user.email "$(git --no-pager show -s --format='%ce' $TRAVIS_COMMIT)" &&
          git clone --branch=gh-pages https://${GH_TOKEN}@github.com/$TRAVIS_REPO_SLUG gh-pages &&
          cd gh-pages &&
          if [ -e master ]; then rm -r master; fi &&
          mkdir master &&
          for f in ../documentation/*.*; do
            sed '/[^#]robo_top_of_doc/ s;jsonfortran</a>;jsonfortran master</a>;' $f > master/${f##*/}
          done &&
          git add master &&
          git ci -m "Development documentation updated by travis $TRAVIS_BUILD_NUMBER for $TRAVIS_COMMIT_RANGE"
          git push origin gh-pages
